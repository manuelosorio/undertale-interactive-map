"use strict";

var $audio = $('#audio'),
    $volumeIcon = $('#volumeIcon'),
    $player = $('.player'),
    $routerContainer = $('.router--container'),
    $menu = $('.nav--menu');
var $map = undefined;
$(document).ready(function () {
  routes();
  var $audio = $('#audio'),
      $muteButton = $('.icon'),
      $volumeIcon = $('#volumeIcon'); //alert variables

  var $alert = $('.alert'),
      $allow = $('#allow'),
      $decline = $('#decline');

  if (localStorage['soundAllowed'] !== undefined) {
    var isSoundAllowed = localStorage.getItem('soundAllowed');

    if (localStorage['soundAllowed'] === 'true') {
      $alert.remove();
      $audio.trigger('play');
      $audio.prop('volume', 0.25);
      $volumeIcon.attr('src', './images/sound.svg');
    } else {
      $alert.remove();
      $audio.trigger('pause');
      $audio.prop('volume', 0);
      $audio.prop('currentTime', '0');
      $volumeIcon.attr('src', './images/mute.svg');
    }
  } else {
    // $alert.remove()
    $audio.trigger('pause');
    $audio.prop('volume', 0);
    $audio.prop('currentTime', '0');
    $volumeIcon.attr('src', '');
  }

  $allow.click(function () {
    localStorage.setItem('soundAllowed', 'true');
    $alert.remove();
    $audio.trigger('play');
    $audio.prop('volume', 0.25);
    $volumeIcon.attr('src', './images/sound.svg');
  });
  $decline.click(function () {
    localStorage.setItem('soundAllowed', 'false');
    $volumeIcon.attr('src', './images/mute.svg');
    $alert.remove();
  });
  $volumeIcon.click(function () {
    if (localStorage['soundAllowed'] === 'true') {
      localStorage['soundAllowed'] = 'false';
      $volumeIcon.attr('src', './images/mute.svg');
      soundMute();
    } else if (localStorage['soundAllowed'] === 'false') {
      localStorage['soundAllowed'] = true;
      $volumeIcon.attr('src', './images/sound.svg');
      soundUnmute();
    }

    console.log('Is sound allowed', localStorage['soundAllowed']);
  });
  console.log('Is sound allowed: ', localStorage['soundAllowed']);
  $('.player').draggable({
    addClasses: false
  });
});
var $dialogue = $('#npc'),
    $avatar = $('#avatar'),
    $chat = $('#chat');

function dialogue(name, message) {
  var $this = $(this);
  $this.message = message;
  $this.name = name;

  if ($this.name === null) {
    $avatar.attr('src', '');
    $avatar.attr('alt', '');
  } else {
    var src = "images/" + $this.name.toLowerCase() + '.png';
    var alt = "Image of " + $this.name;
    $avatar.attr('src', src);
    $avatar.attr('alt', alt);
  }

  $chat.text($this.message);
  $chat.html($chat.html().replace('[new]', '<br /><br />').replace('[spoiler]', '<span class="spoiler">').replace('[/spoiler]', '</span>'));
  dialogueShow();
  $('.spoiler').click(function () {
    $('.spoiler').toggleClass('spoiler');
  });
}

function dialogueShow() {
  $dialogue.show();
}

function dialogueHide() {
  $chat.innerText = null;
  $avatar.attr('src', null);
  $avatar.attr('alt', null);
  $dialogue.hide();
}

$('#closeBox').click(function () {
  dialogueHide();
});

function locationsLoad(name) {
  console.warn(window.location.href.indexOf("404") > -1);

  if (!(window.location.href.indexOf('404') > -1)) {
    $.ajaxSetup({
      cache: false
    });
    $routerContainer.css({
      opacity: '0'
    });
    $player.css({
      opacity: '0'
    });
    $routerContainer.load('./locations/' + name + '.html', function () {
      $routerContainer.stop().animate({
        opacity: '1'
      }, 800, 'swing');
      $player.stop().delay(800).css({
        opacity: '1'
      });
      navEvents();
      $('.map').draggable({
        addClasses: false
      });
      $('.interest-point').draggable({
        addClasses: false
      });
    });
  } else {
    $.ajaxSetup({
      cache: false
    });
    $routerContainer.css({
      opacity: '0'
    });
    $player.css({
      opacity: '0'
    });
    $routerContainer.load('./locations/' + name + '.html', function () {
      $routerContainer.css({
        opacity: '1'
      });
      $player.stop().delay(0).css({
        opacity: '0'
      });
    });
  }
}

var $links = $('#links');

function createNav(navItems) {}

$links.click(function () {// deleteNav()
});

function deleteNav() {// $links.empty()
}

function navEvents() {
  $('#navMenu').on('click', function () {
    var $this = $(this);
    $this.toggleClass('active');
  });
  $('.nav--container').mouseleave(function () {
    if ($('.nav--menu').hasClass('active')) {
      $('.nav--menu').removeClass('active');
    }
  });
}

function newSound(name) {
  console.log("New Song name:", name);
  var src = "./audio/music/" + name + ".mp3";
  console.log("path: ", src);
  $audio.trigger("pause");
  $audio.prop("currentTime", "0");
  $audio.attr('src', src);
  console.log("Local Storage ".concat(localStorage.getItem('soundAllowed')));

  if (localStorage.getItem('soundAllowed') !== undefined || localStorage.getItem('soundAllowed') !== "false") {
    $audio.trigger('play');
  } else if (localStorage.getItem('soundAllowed') === "false") {}
}

function soundMute() {
  $audio.prop("volume", 0);
}

function soundUnmute() {
  $audio.prop("volume", 0.25);
  $audio.prop("currentTime", 0);
  $audio.trigger('play');
}

$(document).keydown(function (e) {
  var speed = 17,
      movement = 15;
  $map = $('.map');

  if (!(window.location.href.indexOf("404") > -1)) {
    switch (e.which) {
      //move up
      case 38:
      case 87:
        console.log(e.code + ' up');
        updatePosition(null, -1 * movement, speed, 'easeOutQuart');
        break;
      //move down

      case 40:
      case 83:
        console.log(e.code + ' down');
        updatePosition(null, movement, speed, 'easeOutQuart');
        break;
      // move left

      case 37:
      case 65:
        console.log(e.code + ' left');
        updatePosition(-1 * movement, null, speed, 'easeOutQuart');
        break;
      //move right

      case 39:
      case 68:
        updatePosition(movement, null, speed, 'easeOutQuart');
        break;
    }
  }
});

function setPosition(target, x, y) {
  var $this = $(this);
  $this.target = target;
  $this.posX = x;
  $this.posY = y;

  if ($this.posX != null && $this.posY != null) {
    console.log("Position X", $this.posX);
    console.log("Position Y", $this.posY);
    $this.target.css({
      'left': $this.posX + 'px',
      'top': $this.posY + 'px'
    });
  } else {
    console.warn("There is actually a null X or Y... Hopefully its intentional...");

    if ($this.posX != null) {
      $this.$this.target.css({
        'left': $this.posX + 'px'
      });
    } else {
      console.warn("X is returning null");
    }

    if ($this.posY != null) {
      $this.target.css({
        'top': $this.posY + 'px'
      });
    } else {
      console.warn("Y is returning null");
    }
  }
}

function updatePosition(x, y, dt, easing) {
  var $this = $(this);
  $this.moveX = x;
  $this.moveY = y;
  $this.offsetX = 5;
  $this.offsetY = 5;
  $this.dt = dt; // X Movement

  if ($this.moveX != null) {
    if ($this.moveX < 0) {
      $this.moveX *= -1;

      if ($player.position().left > 1) {
        $player.stop().animate({
          left: '-=' + $this.moveX + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        left: '+=' + ($this.moveX - $this.offsetX) + 'px'
      }, dt, easing);
    } else {
      if ($player.position().left < window.innerWidth / 2) {
        $player.stop().animate({
          left: '+=' + $this.moveX + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        left: '-=' + ($this.moveX - $this.offsetX) + 'px'
      }, dt, easing);
    }
  } // Y Movement


  if ($this.moveY != null) {
    if ($this.moveY < 0) {
      $this.moveY *= -1;

      if ($player.position().top > 1) {
        $player.stop().animate({
          top: '-=' + $this.moveY + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        top: '+=' + ($this.moveY - $this.offsetY) + 'px'
      }, dt, easing);
    } else {
      if ($player.position().top < window.innerHeight / 2) {
        $player.stop().animate({
          top: '+=' + $this.moveY + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        top: '-=' + ($this.moveY - $this.offsetY) + 'px'
      }, dt, easing);
    }
  }
}

var root = null;
var useHash = true; // Defaults to: false

var hash = '#!'; // Defaults to: '#'

var router = new Navigo(root, useHash, hash);

function routes() {
  router.on(function () {
    console.info('The Underground');
    locationsLoad('the-underground');
    newSound('start');
    setPosition($player, 62, 311);
    dialogueHide();
  });
  router.notFound(function (query) {
    console.info('404 page not found');
    locationsLoad('stay-determined');
    newSound('determination');
    router.navigate("/404");
    deleteNav();
    dialogueHide();
    $(document).keydown(function (e) {
      if (window.location.href.indexOf("404") > -1) {
        setPosition($player, 62, 311);
        router.navigate("/");
      }
    });
  });
  router.on({
    'ruins': function ruins() {
      console.info('Ruins');
      locationsLoad('ruins');
      newSound('ruins');
      setPosition($player, 680, 377);
      dialogue('Toriel', '* I am Toriel, caretaker of the Ruins...[new]' + '* I pass through this place every day to see if anyone has fallen down');
    },
    'ruins/spider-bake-sale': function ruinsSpiderBakeSale() {
      newSound('spiderdance');
      setPosition($player, 769.997, 89.216);
      setPosition($('.map'), -5636.79, -2723.9);
      dialogue('Muffet', '* The Spider Bake Sale is a small vendor and fundraising' + ' event found in the Ruins and Hotland.');
    },
    'snowdin': function snowdin() {
      console.info('Snowdin Forest');
      locationsLoad('snowdin');
      newSound('snowdin');
      setPosition($player, 264, 468);
      dialogue('Sans', '* Hey Bud, ya busy looking looking at a map of the Game Undertale? [new]' + '* Not that I care, but check out the game by Toby Fox.');
    },
    'snowdin/snowman': function snowdinSnowman() {
      setPosition($('.map'), -5634, -794);
      setPosition($player, 764, 300);
      dialogue('Snowman', '* I want to see the world, but can not move.[new]' + '[spoiler]Lets you take a piece to take faraway from there[/spoiler]');
    },
    'snowdin/grillbys': function snowdinGrillbys() {
      setPosition($('.map'), -21909, -2870);
      setPosition($player, 779, 345);
      dialogue('Sans', "I\'m going to Grillby's[new]" + '* Hey what is that next to you?');
    },
    'snowdin/grillbys2': function snowdinGrillbys2() {
      dialogue('Sans', '* Guess Its just a square...');
      setPosition($('.map'), -21909, -2870);
    },
    'snowdin/papyrus-sans-house': function snowdinPapyrusSansHouse() {
      setPosition($('.map'), -23827, -2885);
      setPosition($player, 779, 345);
      newSound('date-start');
      dialogue('papyrus', 'Papyrus house.[new]' + 'Technically Sans\' house too.');
    },
    'waterfall': function waterfall() {
      console.info('Waterfall');
      locationsLoad('waterfall');
      setPosition($player, 475, 365);
      newSound('waterfall');
      dialogueHide();
    },
    'waterfall/temmie': function waterfallTemmie() {
      console.info('Temmie');
      setPosition($('.map'), -14596, -5488);
      setPosition($player, 753, 375);
      newSound('temmie');
      dialogue('temmie', 'Temmie Village home to many Temmies, notable for their quirkiness and affected English speech. [new]' + '[spoiler]Help the shopkeeper pay for a collage education.[/spoiler]');
    },
    'hotland': function hotland() {
      console.info('Hotland');
      locationsLoad('hotland');
      setPosition($player, 258, 432);
      newSound('hotland');
      dialogue(null, 'Wow is it hot in here? The hotland is the path to the core[new]' + 'MTT Resort, Alphy\'s lab, among other things are located here.');
    },
    'hotland/alphy': function hotlandAlphy() {
      setPosition($player, 768, 369.246);
      setPosition($('.map'), -4758.97, -6658.56);
      newSound('alphys');
      dialogue('Alphys', "The Lab is the workplace and home of the royal scientist, Alphys, in Hotland. " + "It is a single building of technological prowess where Alphys conducts her studies.");
    },
    'the-core': function theCore() {
      console.info('The Core');
      locationsLoad('the-core');
      newSound('the-core');
      dialogue("sans", "Nothing to see here.");
    },
    'new-home': function newHome() {
      console.info('New Home');
      locationsLoad('new-home');
      newSound('his-theme');
      setPosition($player, 768, 369.246);
      setPosition($('.map'), 126, -1980);
      dialogue(null, "New Home is the new capital of the Underground, ruled by Asgore Dreemurr, " + "and the final location in the game before the protagonist reaches the barrier.");
    }
  }).resolve();
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyIsIm1vZHVsZXMvZGlhbG9ndWUuanMiLCJtb2R1bGVzL2xvY2F0aW9ucy5qcyIsIm1vZHVsZXMvbmF2aWdhdGlvbi5qcyIsIm1vZHVsZXMvbmV3U291bmQuanMiLCJtb2R1bGVzL3BsYXllck1vdmVtZW50LmpzIiwibW9kdWxlcy9yb3V0ZXMuanMiXSwibmFtZXMiOlsiJGF1ZGlvIiwiJCIsIiR2b2x1bWVJY29uIiwiJHBsYXllciIsIiRyb3V0ZXJDb250YWluZXIiLCIkbWVudSIsIiRtYXAiLCJ1bmRlZmluZWQiLCJkb2N1bWVudCIsInJlYWR5Iiwicm91dGVzIiwiJG11dGVCdXR0b24iLCIkYWxlcnQiLCIkYWxsb3ciLCIkZGVjbGluZSIsImxvY2FsU3RvcmFnZSIsImlzU291bmRBbGxvd2VkIiwiZ2V0SXRlbSIsInJlbW92ZSIsInRyaWdnZXIiLCJwcm9wIiwiYXR0ciIsImNsaWNrIiwic2V0SXRlbSIsInNvdW5kTXV0ZSIsInNvdW5kVW5tdXRlIiwiY29uc29sZSIsImxvZyIsImRyYWdnYWJsZSIsImFkZENsYXNzZXMiLCIkZGlhbG9ndWUiLCIkYXZhdGFyIiwiJGNoYXQiLCJkaWFsb2d1ZSIsIm5hbWUiLCJtZXNzYWdlIiwiJHRoaXMiLCJzcmMiLCJ0b0xvd2VyQ2FzZSIsImFsdCIsInRleHQiLCJodG1sIiwicmVwbGFjZSIsImRpYWxvZ3VlU2hvdyIsInRvZ2dsZUNsYXNzIiwic2hvdyIsImRpYWxvZ3VlSGlkZSIsImlubmVyVGV4dCIsImhpZGUiLCJsb2NhdGlvbnNMb2FkIiwid2FybiIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImluZGV4T2YiLCJhamF4U2V0dXAiLCJjYWNoZSIsImNzcyIsIm9wYWNpdHkiLCJsb2FkIiwic3RvcCIsImFuaW1hdGUiLCJkZWxheSIsIm5hdkV2ZW50cyIsIiRsaW5rcyIsImNyZWF0ZU5hdiIsIm5hdkl0ZW1zIiwiZGVsZXRlTmF2Iiwib24iLCJtb3VzZWxlYXZlIiwiaGFzQ2xhc3MiLCJyZW1vdmVDbGFzcyIsIm5ld1NvdW5kIiwia2V5ZG93biIsImUiLCJzcGVlZCIsIm1vdmVtZW50Iiwid2hpY2giLCJjb2RlIiwidXBkYXRlUG9zaXRpb24iLCJzZXRQb3NpdGlvbiIsInRhcmdldCIsIngiLCJ5IiwicG9zWCIsInBvc1kiLCJkdCIsImVhc2luZyIsIm1vdmVYIiwibW92ZVkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvc2l0aW9uIiwibGVmdCIsImlubmVyV2lkdGgiLCJ0b3AiLCJpbm5lckhlaWdodCIsInJvb3QiLCJ1c2VIYXNoIiwiaGFzaCIsInJvdXRlciIsIk5hdmlnbyIsImluZm8iLCJub3RGb3VuZCIsInF1ZXJ5IiwibmF2aWdhdGUiLCJyZXNvbHZlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsQ0FBQSxDQUFBLFFBQUEsQ0FBQTtBQUFBLElBQ0FDLFdBQUEsR0FBQUQsQ0FBQSxDQUFBLGFBQUEsQ0FEQTtBQUFBLElBRUFFLE9BQUEsR0FBQUYsQ0FBQSxDQUFBLFNBQUEsQ0FGQTtBQUFBLElBR0FHLGdCQUFBLEdBQUFILENBQUEsQ0FBQSxvQkFBQSxDQUhBO0FBQUEsSUFJQUksS0FBQSxHQUFBSixDQUFBLENBQUEsWUFBQSxDQUpBO0FBS0EsSUFBQUssSUFBQSxHQUFBQyxTQUFBO0FBQ0FOLENBQUEsQ0FBQU8sUUFBQSxDQUFBLENBQUFDLEtBQUEsQ0FBQSxZQUFBO0FBQ0FDLEVBQUFBLE1BQUE7QUFDQSxNQUFBVixNQUFBLEdBQUFDLENBQUEsQ0FBQSxRQUFBLENBQUE7QUFBQSxNQUNBVSxXQUFBLEdBQUFWLENBQUEsQ0FBQSxPQUFBLENBREE7QUFBQSxNQUVBQyxXQUFBLEdBQUFELENBQUEsQ0FBQSxhQUFBLENBRkEsQ0FGQSxDQU1BOztBQUNBLE1BQUFXLE1BQUEsR0FBQVgsQ0FBQSxDQUFBLFFBQUEsQ0FBQTtBQUFBLE1BQ0FZLE1BQUEsR0FBQVosQ0FBQSxDQUFBLFFBQUEsQ0FEQTtBQUFBLE1BRUFhLFFBQUEsR0FBQWIsQ0FBQSxDQUFBLFVBQUEs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QUE7QUFDQTFDLEVBQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXFCLEtBQUEsQ0FBQSxZQUFBO0FBQ0FyQixJQUFBQSxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUEyQyxXQUFBLENBQUEsU0FBQTtBQUNBLEdBRkE7QUFJQTs7QUFDQSxTQUFBRCxZQUFBLEdBQUE7QUFDQWIsRUFBQUEsU0FBQSxDQUFBZSxJQUFBO0FBQ0E7O0FBQ0EsU0FBQUMsWUFBQSxHQUFBO0FBQ0FkLEVBQUFBLEtBQUEsQ0FBQWUsU0FBQSxHQUFBLElBQUE7QUFDQWhCLEVBQUFBLE9BQUEsQ0FBQVYsSUFBQSxDQUFBLEtBQUEsRUFBQSxJQUFBO0FBQ0FVLEVBQUFBLE9BQUEsQ0FBQVYsSUFBQSxDQUFBLEtBQUEsRUFBQSxJQUFBO0FBQ0FTLEVBQUFBLFNBQUEsQ0FBQWtCLElBQUE7QUFDQTs7QUFDQS9DLENBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQXFCLEtBQUEsQ0FBQSxZQUFBO0FBQ0F3QixFQUFBQSxZQUFBO0FBQ0EsQ0FGQTs7QUN0Q0EsU0FBQUcsYUFBQSxDQUFBZixJQUFBLEVBQUE7QUFDQVIsRUFBQUEsT0FBQSxDQUFBd0IsSUFBQSxDQUFBQyxNQUFBLENBQUFDLFFBQUEsQ0FBQUMsSUFBQSxDQUFBQyxPQUFBLENBQUEsS0FBQSxJQUFBLENBQUEsQ0FBQTs7QUFDQSxNQUFBLEVBQUFILE1BQUEsQ0FBQUMsUUFBQSxDQUFBQyxJQUFBLENBQUFDLE9BQUEsQ0FBQSxLQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTtBQUNBckQsSUFBQUEsQ0FBQSxDQUFBc0QsU0FBQSxDQUFBO0FBQ0FDLE1BQUFBLEtBQUEsRUFBQTtBQURBLEtBQUE7QUFHQXBELElBQUFBLGdCQUFBLENBQUFxRCxHQUFBLENBQUE7QUFBQUMsTUFBQUEsT0FBQSxFQUFBO0FBQUEsS0FBQTtBQUNBdkQsSUFBQUEsT0FBQSxDQUFBc0QsR0FBQSxDQUFBO0FBQUFDLE1BQUFBLE9BQUEsRUFBQTtBQUFBLEtBQUE7QUFDQXRELElBQUFBLGdCQUFBLENBQUF1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QUEsQ0FBQTtBQUNBdUIsTUFBQUEsUUFBQSxDQUFBLFVBQUEsQ0FBQTtBQUNBdkMsTUFBQUEsUUFBQSxDQUFBLE1BQUEsRUFBQSxzQkFBQSxDQUFBO0FBQ0EsS0F0RkE7QUF1RkEsZ0JBQUEsbUJBQUE7QUFDQVAsTUFBQUEsT0FBQSxDQUFBNEUsSUFBQSxDQUFBLFVBQUE7QUFDQXJELE1BQUFBLGFBQUEsQ0FBQSxVQUFBLENBQUE7QUFDQXVCLE1BQUFBLFFBQUEsQ0FBQSxXQUFBLENBQUE7QUFDQVEsTUFBQUEsV0FBQSxDQUFBN0UsT0FBQSxFQUFBLEdBQUEsRUFBQSxPQUFBLENBQUE7QUFDQTZFLE1BQUFBLFdBQUEsQ0FBQS9FLENBQUEsQ0FBQSxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxJQUFBLENBQUE7QUFDQWdDLE1BQUFBLFFBQUEsQ0FBQSxJQUFBLEVBQUEsK0VBQ0EsZ0ZBREEsQ0FBQTtBQUVBO0FBL0ZBLEdBREEsRUFpR0F5RSxPQWpHQTtBQW1HQSIsImZpbGUiOiJzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCAkYXVkaW8gPSAkKCcjYXVkaW8nKSxcclxuICAgICAgJHZvbHVtZUljb24gPSAkKCcjdm9sdW1lSWNvbicpLFxyXG4gICAgICAkcGxheWVyID0gJCgnLnBsYXllcicpLFxyXG4gICAgICAkcm91dGVyQ29udGFpbmVyID0gJCgnLnJvdXRlci0tY29udGFpbmVyJyksXHJcbiAgICAgICRtZW51ID0gJCgnLm5hdi0tbWVudScpXHJcbiAgbGV0ICRtYXAgPSB1bmRlZmluZWRcclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gIHJvdXRlcygpXHJcbiAgY29uc3QgJGF1ZGlvID0gJCgnI2F1ZGlvJyksXHJcbiAgICAgICAgJG11dGVCdXR0b24gPSAkKCcuaWNvbicpLFxyXG4gICAgICAgICR2b2x1bWVJY29uID0gJCgnI3ZvbHVtZUljb24nKVxyXG5cclxuICAvL2FsZXJ0IHZhcmlhYmxlc1xyXG4gIGNvbnN0ICRhbGVydCA9ICQoJy5hbGVydCcpLFxyXG4gICAgICAgICRhbGxvdyA9ICQoJyNhbGxvdycpLFxyXG4gICAgICAgICRkZWNsaW5lID0gJCgnI2RlY2xpbmUnKVxyXG5cclxuICBpZiAobG9jYWxTdG9yYWdlWydzb3VuZEFsbG93ZWQnXSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICBsZXQgaXNTb3VuZEFsbG93ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc291bmRBbGxvd2VkJylcclxuICAgIGlmIChsb2NhbFN0b3JhZ2VbJ3NvdW5kQWxsb3dlZCddID09PSAndHJ1ZScpIHtcclxuICAgICAgJGFsZXJ0LnJlbW92ZSgpXHJcbiAgICAgICRhdWRpby50cmlnZ2VyKCdwbGF5JylcclxuICAgICAgJGF1ZGlvLnByb3AoJ3ZvbHVtZScsIDAuMjUpXHJcbiAgICAgICR2b2x1bWVJY29uLmF0dHIoJ3NyYycsICcuL2ltYWdlcy9zb3VuZC5zdmcnKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJGFsZXJ0LnJlbW92ZSgpXHJcbiAgICAgICRhdWRpby50cmlnZ2VyKCdwYXVzZScpXHJcbiAgICAgICRhdWRpby5wcm9wKCd2b2x1bWUnLCAwKVxyXG4gICAgICAkYXVkaW8ucHJvcCgnY3VycmVudFRpbWUnLCAnMCcpXHJcbiAgICAgICR2b2x1bWVJY29uLmF0dHIoJ3NyYycsICcuL2ltYWdlcy9tdXRlLnN2ZycpXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vICRhbGVydC5yZW1vdmUoKVxyXG4gICAgJGF1ZGlvLnRyaWdnZXIoJ3BhdXNlJylcclxuICAgICRhdWRpby5wcm9wKCd2b2x1bWUnLCAwKVxyXG4gICAgJGF1ZGlvLnByb3AoJ2N1cnJlbnRUaW1lJywgJzAnKVxyXG4gICAgJHZvbHVtZUljb24uYXR0cignc3JjJywgJycpXHJcbiAgfVxyXG5cclxuICAkYWxsb3cuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc291bmRBbGxvd2VkJywgJ3RydWUnKVxyXG4gICAgJGFsZXJ0LnJlbW92ZSgpXHJcbiAgICAkYXVkaW8udHJpZ2dlcigncGxheScpXHJcbiAgICAkYXVkaW8ucHJvcCgndm9sdW1lJywgMC4yNSlcclxuICAgICR2b2x1bWVJY29uLmF0dHIoJ3NyYycsICcuL2ltYWdlcy9zb3VuZC5zdmcnKVxyXG4gIH0pXHJcblxyXG4gICRkZWNsaW5lLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NvdW5kQWxsb3dlZCcsICdmYWxzZScpXHJcbiAgICAkdm9sdW1lSWNvbi5hdHRyKCdzcmMnLCAnLi9pbWFnZXMvbXV0ZS5zdmcnKVxyXG4gICAgJGFsZXJ0LnJlbW92ZSgpXHJcbiAgfSlcclxuXHJcblxyXG4gICR2b2x1bWVJY29uLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChsb2NhbFN0b3JhZ2VbJ3NvdW5kQWxsb3dlZCddID09PSAndHJ1ZScpIHtcclxuICAgICAgbG9jYWxTdG9yYWdlWydzb3VuZEFsbG93ZWQnXSA9ICdmYWxzZSdcclxuICAgICAgJHZvbHVtZUljb24uYXR0cignc3JjJywgJy4vaW1hZ2VzL211dGUuc3ZnJylcclxuICAgICAgc291bmRNdXRlKClcclxuICAgIH0gZWxzZSBpZiAobG9jYWxTdG9yYWdlWydzb3VuZEFsbG93ZWQnXSA9PT0gJ2ZhbHNlJykge1xyXG4gICAgICBsb2NhbFN0b3JhZ2VbJ3NvdW5kQWxsb3dlZCddID0gdHJ1ZVxyXG4gICAgICAkdm9sdW1lSWNvbi5hdHRyKCdzcmMnLCAnLi9pbWFnZXMvc291bmQuc3ZnJylcclxuICAgICAgc291bmRVbm11dGUoKVxyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coJ0lzIHNvdW5kIGFsbG93ZWQnLCBsb2NhbFN0b3JhZ2VbJ3NvdW5kQWxsb3dlZCddKSBcclxuICB9KVxyXG5cclxuXHJcblxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdJcyBzb3VuZCBhbGxvd2VkOiAnLCBsb2NhbFN0b3JhZ2VbJ3NvdW5kQWxsb3dlZCddKVxyXG5cclxuXHJcblxyXG4gICQoJy5wbGF5ZXInKS5kcmFnZ2FibGUoe1xyXG4gICAgYWRkQ2xhc3NlczogZmFsc2VcclxuICB9KVxyXG5cclxufSlcclxuIiwiY29uc3QgJGRpYWxvZ3VlID0gJCgnI25wYycpLFxyXG4gICRhdmF0YXIgPSAkKCcjYXZhdGFyJyksXHJcbiAgJGNoYXQgPSAkKCcjY2hhdCcpXHJcbmZ1bmN0aW9uIGRpYWxvZ3VlKG5hbWUsIG1lc3NhZ2UpIHtcclxuICBsZXQgJHRoaXMgPSAkKHRoaXMpXHJcbiAgJHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcclxuICAkdGhpcy5uYW1lID0gbmFtZVxyXG4gIGlmICgoJHRoaXMubmFtZSA9PT0gbnVsbCkpIHtcclxuICAgICRhdmF0YXIuYXR0cignc3JjJywgJycpXHJcbiAgICAkYXZhdGFyLmF0dHIoJ2FsdCcsICcnKVxyXG4gIH0gZWxzZSB7XHJcblxyXG4gICAgbGV0IHNyYyA9IFwiaW1hZ2VzL1wiICsgJHRoaXMubmFtZS50b0xvd2VyQ2FzZSgpICsgJy5wbmcnXHJcbiAgICBsZXQgYWx0ID0gXCJJbWFnZSBvZiBcIiArICR0aGlzLm5hbWVcclxuICAgICRhdmF0YXIuYXR0cignc3JjJywgc3JjKVxyXG4gICAgJGF2YXRhci5hdHRyKCdhbHQnLCBhbHQpXHJcbiAgfVxyXG5cclxuICAkY2hhdC50ZXh0KCR0aGlzLm1lc3NhZ2UpXHJcbiAgJGNoYXQuaHRtbCgkY2hhdC5odG1sKCkucmVwbGFjZSgnW25ld10nLCAnPGJyIC8+PGJyIC8+JylcclxuICAgIC5yZXBsYWNlKCdbc3BvaWxlcl0nLCAnPHNwYW4gY2xhc3M9XCJzcG9pbGVyXCI+JylcclxuICAgIC5yZXBsYWNlKCdbL3Nwb2lsZXJdJywgJzwvc3Bhbj4nKSlcclxuXHJcbiAgZGlhbG9ndWVTaG93KClcclxuICAkKCcuc3BvaWxlcicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICQoJy5zcG9pbGVyJykudG9nZ2xlQ2xhc3MoJ3Nwb2lsZXInKVxyXG4gIH0pXHJcblxyXG59XHJcbmZ1bmN0aW9uIGRpYWxvZ3VlU2hvdygpIHtcclxuICAkZGlhbG9ndWUuc2hvdygpXHJcbn1cclxuZnVuY3Rpb24gZGlhbG9ndWVIaWRlKCkge1xyXG4gICRjaGF0LmlubmVyVGV4dCA9IG51bGxcclxuICAkYXZhdGFyLmF0dHIoJ3NyYycsIG51bGwpXHJcbiAgJGF2YXRhci5hdHRyKCdhbHQnLCBudWxsKVxyXG4gICRkaWFsb2d1ZS5oaWRlKClcclxufVxyXG4kKCcjY2xvc2VCb3gnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgZGlhbG9ndWVIaWRlKClcclxufSlcclxuIiwiZnVuY3Rpb24gbG9jYXRpb25zTG9hZChuYW1lKSB7XHJcbiAgY29uc29sZS53YXJuKHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoXCI0MDRcIikgPiAtMSlcclxuICBpZiAoISh3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCc0MDQnKSA+IC0xKSkge1xyXG4gICAgJC5hamF4U2V0dXAoe1xyXG4gICAgICBjYWNoZTogZmFsc2VcclxuICAgIH0pXHJcbiAgICAkcm91dGVyQ29udGFpbmVyLmNzcyh7b3BhY2l0eTogJzAnfSlcclxuICAgICRwbGF5ZXIuY3NzKHtvcGFjaXR5OiAnMCd9KVxyXG4gICAgJHJvdXRlckNvbnRhaW5lci5sb2FkKCcuL2xvY2F0aW9ucy8nICsgbmFtZSArICcuaHRtbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgJHJvdXRlckNvbnRhaW5lci5zdG9wKCkuYW5pbWF0ZSh7b3BhY2l0eTogJzEnfSwgODAwLCAnc3dpbmcnKVxyXG4gICAgICAkcGxheWVyLnN0b3AoKS5kZWxheSg4MDApLmNzcyh7b3BhY2l0eTogJzEnfSlcclxuICAgICAgbmF2RXZlbnRzKClcclxuICAgICAgJCgnLm1hcCcpLmRyYWdnYWJsZSh7XHJcbiAgICAgICAgYWRkQ2xhc3NlczogZmFsc2VcclxuICAgICAgfSlcclxuICAgICAgJCgnLmludGVyZXN0LXBvaW50JykuZHJhZ2dhYmxlKHtcclxuICAgICAgICBhZGRDbGFzc2VzOiBmYWxzZVxyXG4gICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgfSBlbHNlIHtcclxuICAgICQuYWpheFNldHVwKHtcclxuICAgICAgY2FjaGU6IGZhbHNlXHJcbiAgICB9KVxyXG4gICAgJHJvdXRlckNvbnRhaW5lci5jc3Moe29wYWNpdHk6ICcwJ30pXHJcbiAgICAkcGxheWVyLmNzcyh7b3BhY2l0eTogJzAnfSlcclxuICAgICRyb3V0ZXJDb250YWluZXIubG9hZCgnLi9sb2NhdGlvbnMvJyArIG5hbWUgKyAnLmh0bWwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICRyb3V0ZXJDb250YWluZXIuY3NzKHtvcGFjaXR5OiAnMSd9KVxyXG4gICAgICAkcGxheWVyLnN0b3AoKS5kZWxheSgwKS5jc3Moe29wYWNpdHk6ICcwJ30pXHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG4iLCJsZXQgJGxpbmtzID0gJCgnI2xpbmtzJylcclxuZnVuY3Rpb24gY3JlYXRlTmF2KG5hdkl0ZW1zKSB7XHJcblxyXG59XHJcbiRsaW5rcy5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgLy8gZGVsZXRlTmF2KClcclxufSlcclxuZnVuY3Rpb24gZGVsZXRlTmF2KCkge1xyXG4gIC8vICRsaW5rcy5lbXB0eSgpXHJcbn1cclxuZnVuY3Rpb24gbmF2RXZlbnRzKCkge1xyXG4gICQoJyNuYXZNZW51Jykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgbGV0ICR0aGlzID0gJCh0aGlzKVxyXG4gICAgJHRoaXMudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpXHJcbiAgfSlcclxuICAkKCcubmF2LS1jb250YWluZXInKS5tb3VzZWxlYXZlKGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICgkKCcubmF2LS1tZW51JykuaGFzQ2xhc3MoJ2FjdGl2ZScpKXtcclxuICAgICAgJCgnLm5hdi0tbWVudScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgfVxyXG4gIH0pXHJcbn1cclxuIiwiZnVuY3Rpb24gbmV3U291bmQobmFtZSkge1xyXG4gIGNvbnNvbGUubG9nKFwiTmV3IFNvbmcgbmFtZTpcIiwgbmFtZSlcclxuICBsZXQgc3JjID0gXCIuL2F1ZGlvL211c2ljL1wiICsgbmFtZSArIFwiLm1wM1wiO1xyXG4gIGNvbnNvbGUubG9nKFwicGF0aDogXCIsIHNyYylcclxuXHJcbiAgJGF1ZGlvLnRyaWdnZXIoXCJwYXVzZVwiKVxyXG4gICRhdWRpby5wcm9wKFwiY3VycmVudFRpbWVcIiwgXCIwXCIpXHJcbiAgJGF1ZGlvLmF0dHIoJ3NyYycsIHNyYylcclxuICBcclxuICBjb25zb2xlLmxvZyhgTG9jYWwgU3RvcmFnZSAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdzb3VuZEFsbG93ZWQnKX1gKVxyXG4gIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc291bmRBbGxvd2VkJykgIT09IHVuZGVmaW5lZCB8fCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc291bmRBbGxvd2VkJykgIT09IFwiZmFsc2VcIikge1xyXG4gICAgJGF1ZGlvLnRyaWdnZXIoJ3BsYXknKVxyXG4gIH0gZWxzZSBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NvdW5kQWxsb3dlZCcpID09PSBcImZhbHNlXCIpIHtcclxuICB9XHJcbn1cclxuZnVuY3Rpb24gc291bmRNdXRlKCkge1xyXG4gICRhdWRpby5wcm9wKFwidm9sdW1lXCIsIDApXHJcbn1cclxuZnVuY3Rpb24gc291bmRVbm11dGUgKCkge1xyXG4gICRhdWRpby5wcm9wKFwidm9sdW1lXCIsIDAuMjUpXHJcbiAgJGF1ZGlvLnByb3AoXCJjdXJyZW50VGltZVwiLCAwKVxyXG4gICRhdWRpby50cmlnZ2VyKCdwbGF5JylcclxufVxyXG4iLCIkKGRvY3VtZW50KS5rZXlkb3duKGZ1bmN0aW9uKGUpe1xyXG4gIGxldCBzcGVlZCA9IDE3LFxyXG4gICAgICBtb3ZlbWVudCA9IDE1XHJcbiAgJG1hcCA9ICQoJy5tYXAnKVxyXG4gIGlmICghKHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoXCI0MDRcIikgPiAtMSkpIHtcclxuICAgIHN3aXRjaCAoZS53aGljaCkge1xyXG4gICAgICAvL21vdmUgdXBcclxuICAgICAgY2FzZSAzODpcclxuICAgICAgY2FzZSA4NzpcclxuICAgICAgICBjb25zb2xlLmxvZyhlLmNvZGUgKyAnIHVwJylcclxuICAgICAgICB1cGRhdGVQb3NpdGlvbihudWxsLCAtMSAqIG1vdmVtZW50LCBzcGVlZCwgJ2Vhc2VPdXRRdWFydCcpXHJcbiAgICAgIGJyZWFrXHJcbiAgICAgIFxyXG4gICAgICAvL21vdmUgZG93blxyXG4gICAgICBjYXNlIDQwOlxyXG4gICAgICBjYXNlIDgzOlxyXG4gICAgICAgIGNvbnNvbGUubG9nKGUuY29kZSArICcgZG93bicpXHJcbiAgICAgICAgdXBkYXRlUG9zaXRpb24obnVsbCwgbW92ZW1lbnQsIHNwZWVkLCAnZWFzZU91dFF1YXJ0JylcclxuICAgICAgYnJlYWtcclxuXHJcbiAgICAgIC8vIG1vdmUgbGVmdFxyXG4gICAgICBjYXNlIDM3OlxyXG4gICAgICBjYXNlIDY1OlxyXG4gICAgICAgIGNvbnNvbGUubG9nKGUuY29kZSArICcgbGVmdCcpXHJcbiAgICAgICAgdXBkYXRlUG9zaXRpb24oLTEgKiBtb3ZlbWVudCwgbnVsbCwgc3BlZWQsICdlYXNlT3V0UXVhcnQnKVxyXG4gICAgICBicmVha1xyXG4gICAgICAvL21vdmUgcmlnaHRcclxuICAgICAgY2FzZSAzOTpcclxuICAgICAgY2FzZSA2ODpcclxuICAgICAgICB1cGRhdGVQb3NpdGlvbihtb3ZlbWVudCwgbnVsbCwgc3BlZWQsICdlYXNlT3V0UXVhcnQnKVxyXG4gICAgICBicmVha1xyXG4gICAgfVxyXG4gIH1cclxufSlcclxuXHJcblxyXG5mdW5jdGlvbiBzZXRQb3NpdGlvbih0YXJnZXQsIHgsIHkpIHtcclxuICBsZXQgJHRoaXMgPSAkKHRoaXMpXHJcbiAgJHRoaXMudGFyZ2V0ID0gdGFyZ2V0XHJcbiAgJHRoaXMucG9zWCA9IHhcclxuICAkdGhpcy5wb3NZID0geVxyXG5cclxuICBpZiAoJHRoaXMucG9zWCAhPSBudWxsICYmICR0aGlzLnBvc1kgIT0gbnVsbCkge1xyXG4gICAgY29uc29sZS5sb2coXCJQb3NpdGlvbiBYXCIsICR0aGlzLnBvc1gpXHJcbiAgICBjb25zb2xlLmxvZyhcIlBvc2l0aW9uIFlcIiwgJHRoaXMucG9zWSlcclxuICAgICR0aGlzLnRhcmdldC5jc3Moe1xyXG4gICAgICAnbGVmdCc6ICR0aGlzLnBvc1ggKyAncHgnLFxyXG4gICAgICAndG9wJzogJHRoaXMucG9zWSArICdweCdcclxuICAgIH0pXHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnNvbGUud2FybihcIlRoZXJlIGlzIGFjdHVhbGx5IGEgbnVsbCBYIG9yIFkuLi4gSG9wZWZ1bGx5IGl0cyBpbnRlbnRpb25hbC4uLlwiKVxyXG4gICAgaWYgKCR0aGlzLnBvc1ggIT0gbnVsbCkge1xyXG4gICAgICAkdGhpcy4kdGhpcy50YXJnZXQuY3NzKHtcclxuICAgICAgICAnbGVmdCc6ICR0aGlzLnBvc1ggKyAncHgnXHJcbiAgICAgIH0pXHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUud2FybihcIlggaXMgcmV0dXJuaW5nIG51bGxcIilcclxuICAgIH1cclxuICAgIGlmICgkdGhpcy5wb3NZICE9IG51bGwpIHtcclxuICAgICAgJHRoaXMudGFyZ2V0LmNzcyh7XHJcbiAgICAgICAgJ3RvcCc6ICR0aGlzLnBvc1kgKyAncHgnXHJcbiAgICAgIH0pXHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUud2FybihcIlkgaXMgcmV0dXJuaW5nIG51bGxcIilcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uKHgsIHksIGR0LCBlYXNpbmcpIHtcclxuICBsZXQgJHRoaXMgPSAkKHRoaXMpXHJcbiAgJHRoaXMubW92ZVggPSB4XHJcbiAgJHRoaXMubW92ZVkgPSB5XHJcbiAgJHRoaXMub2Zmc2V0WCA9IDVcclxuICAkdGhpcy5vZmZzZXRZID0gNVxyXG4gICR0aGlzLmR0ID0gZHRcclxuICBcclxuICAvLyBYIE1vdmVtZW50XHJcbiAgaWYgKCR0aGlzLm1vdmVYICE9IG51bGwpIHtcclxuICAgIGlmICgkdGhpcy5tb3ZlWCA8IDApIHtcclxuICAgICAgJHRoaXMubW92ZVggKj0gLTFcclxuICAgICAgaWYgKCRwbGF5ZXIucG9zaXRpb24oKS5sZWZ0ID4gMSkge1xyXG4gICAgICAgICRwbGF5ZXIuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgbGVmdDogJy09JyArICR0aGlzLm1vdmVYICsgJ3B4J1xyXG4gICAgICAgIH0sIGR0LCBlYXNpbmcpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgICRtYXAuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgIGxlZnQ6ICcrPScgKyAoJHRoaXMubW92ZVggLSAkdGhpcy5vZmZzZXRYKSArICdweCdcclxuICAgICAgfSwgZHQsIGVhc2luZykgICAgICBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICgkcGxheWVyLnBvc2l0aW9uKCkubGVmdCA8ICh3aW5kb3cuaW5uZXJXaWR0aC8yKSkge1xyXG4gICAgICAgICRwbGF5ZXIuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgbGVmdDogJys9JyArICR0aGlzLm1vdmVYICsgJ3B4J1xyXG4gICAgICAgIH0sIGR0LCBlYXNpbmcpXHJcbiAgICAgIH1cclxuICAgICAgJG1hcC5zdG9wKCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgbGVmdDogJy09JyArICgkdGhpcy5tb3ZlWCAtICR0aGlzLm9mZnNldFgpICsgJ3B4J1xyXG4gICAgICB9LCBkdCwgZWFzaW5nKVxyXG4gICAgfVxyXG4gIH1cclxuICAvLyBZIE1vdmVtZW50XHJcbiAgaWYgKCR0aGlzLm1vdmVZICE9IG51bGwpIHtcclxuXHJcbiAgICBpZiAoJHRoaXMubW92ZVkgPCAwKSB7XHJcbiAgICAgICR0aGlzLm1vdmVZICo9IC0xXHJcbiAgICAgIGlmICgkcGxheWVyLnBvc2l0aW9uKCkudG9wID4gMSkge1xyXG4gICAgICAgICRwbGF5ZXIuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgdG9wOiAnLT0nICsgJHRoaXMubW92ZVkgKyAncHgnXHJcbiAgICAgICAgfSwgZHQsIGVhc2luZylcclxuICAgICAgfVxyXG5cclxuICAgICAgJG1hcC5zdG9wKCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgdG9wOiAnKz0nICsgKCR0aGlzLm1vdmVZIC0gJHRoaXMub2Zmc2V0WSkgKyAncHgnXHJcbiAgICAgIH0sIGR0LCBlYXNpbmcpXHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCRwbGF5ZXIucG9zaXRpb24oKS50b3AgPCAod2luZG93LmlubmVySGVpZ2h0LzIpKSB7XHJcbiAgICAgICAgJHBsYXllci5zdG9wKCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgICB0b3A6ICcrPScgKyAkdGhpcy5tb3ZlWSArICdweCdcclxuICAgICAgICB9LCBkdCwgZWFzaW5nKVxyXG4gICAgICB9XHJcbiAgICAgICRtYXAuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgIHRvcDogJy09JyArICgkdGhpcy5tb3ZlWSAtICR0aGlzLm9mZnNldFkpICsgJ3B4J1xyXG4gICAgICB9LCBkdCwgZWFzaW5nKVxyXG4gICAgICBcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiIsImxldCByb290ID0gbnVsbFxyXG5sZXQgdXNlSGFzaCA9IHRydWUgLy8gRGVmYXVsdHMgdG86IGZhbHNlXHJcbmxldCBoYXNoID0gJyMhJyAvLyBEZWZhdWx0cyB0bzogJyMnXHJcbmxldCByb3V0ZXIgPSBuZXcgTmF2aWdvKHJvb3QsIHVzZUhhc2gsIGhhc2gpXHJcblxyXG5mdW5jdGlvbiByb3V0ZXMoKSB7XHJcbiAgcm91dGVyLm9uKGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUuaW5mbygnVGhlIFVuZGVyZ3JvdW5kJylcclxuICAgIGxvY2F0aW9uc0xvYWQoJ3RoZS11bmRlcmdyb3VuZCcpXHJcbiAgICBuZXdTb3VuZCgnc3RhcnQnKVxyXG4gICAgc2V0UG9zaXRpb24oJHBsYXllciwgNjIsIDMxMSlcclxuICAgIGRpYWxvZ3VlSGlkZSgpXHJcbiAgfSlcclxuICBcclxuICByb3V0ZXIubm90Rm91bmQoZnVuY3Rpb24gKHF1ZXJ5KSB7XHJcbiAgICBjb25zb2xlLmluZm8oJzQwNCBwYWdlIG5vdCBmb3VuZCcpXHJcbiAgICBsb2NhdGlvbnNMb2FkKCdzdGF5LWRldGVybWluZWQnKVxyXG4gICAgbmV3U291bmQoJ2RldGVybWluYXRpb24nKVxyXG4gICAgcm91dGVyLm5hdmlnYXRlKFwiLzQwNFwiKVxyXG4gICAgZGVsZXRlTmF2KClcclxuICAgIGRpYWxvZ3VlSGlkZSgpXHJcbiAgICAkKGRvY3VtZW50KS5rZXlkb3duKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGlmICh3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKFwiNDA0XCIpID4gLTEpIHtcclxuICAgICAgICBzZXRQb3NpdGlvbigkcGxheWVyLCA2MiwgMzExKVxyXG4gICAgICAgIHJvdXRlci5uYXZpZ2F0ZShcIi9cIilcclxuXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfSlcclxuICBcclxuICBcclxuICByb3V0ZXJcclxuICAgIC5vbih7XHJcblxyXG4gICAgICAncnVpbnMnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5pbmZvKCdSdWlucycpXHJcbiAgICAgICAgbG9jYXRpb25zTG9hZCgncnVpbnMnKVxyXG4gICAgICAgIG5ld1NvdW5kKCdydWlucycpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJHBsYXllciwgNjgwLCAzNzcpXHJcbiAgICAgICAgZGlhbG9ndWUoJ1RvcmllbCcsICcqIEkgYW0gVG9yaWVsLCBjYXJldGFrZXIgb2YgdGhlIFJ1aW5zLi4uW25ld10nICtcclxuICAgICAgICAgICcqIEkgcGFzcyB0aHJvdWdoIHRoaXMgcGxhY2UgZXZlcnkgZGF5IHRvIHNlZSBpZiBhbnlvbmUgaGFzIGZhbGxlbiBkb3duJylcclxuICAgICAgfSxcclxuICAgICAgJ3J1aW5zL3NwaWRlci1iYWtlLXNhbGUnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbmV3U291bmQoJ3NwaWRlcmRhbmNlJylcclxuICAgICAgICBzZXRQb3NpdGlvbigkcGxheWVyLCA3NjkuOTk3LCA4OS4yMTYpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJCgnLm1hcCcpLCAtNTYzNi43OSwgLTI3MjMuOSlcclxuICAgICAgICBkaWFsb2d1ZSgnTXVmZmV0JywgJyogVGhlIFNwaWRlciBCYWtlIFNhbGUgaXMgYSBzbWFsbCB2ZW5kb3IgYW5kIGZ1bmRyYWlzaW5nJyArXHJcbiAgICAgICAgICAnIGV2ZW50IGZvdW5kIGluIHRoZSBSdWlucyBhbmQgSG90bGFuZC4nKVxyXG4gICAgICB9LFxyXG4gICAgICAnc25vd2Rpbic6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmluZm8oJ1Nub3dkaW4gRm9yZXN0JylcclxuICAgICAgICBsb2NhdGlvbnNMb2FkKCdzbm93ZGluJylcclxuICAgICAgICBuZXdTb3VuZCgnc25vd2RpbicpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJHBsYXllciwgMjY0LCA0NjgpXHJcbiAgICAgICAgZGlhbG9ndWUoJ1NhbnMnLCAnKiBIZXkgQnVkLCB5YSBidXN5IGxvb2tpbmcgbG9va2luZyBhdCBhIG1hcCBvZiB0aGUgR2FtZSBVbmRlcnRhbGU/IFtuZXddJyArXHJcbiAgICAgICAgICAnKiBOb3QgdGhhdCBJIGNhcmUsIGJ1dCBjaGVjayBvdXQgdGhlIGdhbWUgYnkgVG9ieSBGb3guJylcclxuICAgICAgfSxcclxuICAgICAgJ3Nub3dkaW4vc25vd21hbic6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRQb3NpdGlvbigkKCcubWFwJyksIC01NjM0LCAtNzk0KVxyXG4gICAgICAgIHNldFBvc2l0aW9uKCRwbGF5ZXIsIDc2NCwgMzAwKVxyXG4gICAgICAgIGRpYWxvZ3VlKCdTbm93bWFuJywgJyogSSB3YW50IHRvIHNlZSB0aGUgd29ybGQsIGJ1dCBjYW4gbm90IG1vdmUuW25ld10nICtcclxuICAgICAgICAgICdbc3BvaWxlcl1MZXRzIHlvdSB0YWtlIGEgcGllY2UgdG8gdGFrZSBmYXJhd2F5IGZyb20gdGhlcmVbL3Nwb2lsZXJdJylcclxuICAgICAgfSxcclxuICAgICAgJ3Nub3dkaW4vZ3JpbGxieXMnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2V0UG9zaXRpb24oJCgnLm1hcCcpLCAtMjE5MDksIC0yODcwKVxyXG4gICAgICAgIHNldFBvc2l0aW9uKCRwbGF5ZXIsIDc3OSwgMzQ1KVxyXG4gICAgICAgIGRpYWxvZ3VlKCdTYW5zJywgXCJJXFwnbSBnb2luZyB0byBHcmlsbGJ5J3NbbmV3XVwiICtcclxuICAgICAgICAgICcqIEhleSB3aGF0IGlzIHRoYXQgbmV4dCB0byB5b3U/JylcclxuICAgICAgfSxcclxuICAgICAgJ3Nub3dkaW4vZ3JpbGxieXMyJzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGRpYWxvZ3VlKCdTYW5zJywgJyogR3Vlc3MgSXRzIGp1c3QgYSBzcXVhcmUuLi4nKVxyXG4gICAgICAgIHNldFBvc2l0aW9uKCQoJy5tYXAnKSwgLTIxOTA5LCAtMjg3MClcclxuICAgICAgfSxcclxuICAgICAgJ3Nub3dkaW4vcGFweXJ1cy1zYW5zLWhvdXNlJzogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICBzZXRQb3NpdGlvbigkKCcubWFwJyksIC0yMzgyNywgLTI4ODUpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJHBsYXllciwgNzc5LCAzNDUpXHJcbiAgICAgICAgbmV3U291bmQoJ2RhdGUtc3RhcnQnKVxyXG4gICAgICAgIGRpYWxvZ3VlKCdwYXB5cnVzJywgJ1BhcHlydXMgaG91c2UuW25ld10nICtcclxuICAgICAgICAgICdUZWNobmljYWxseSBTYW5zXFwnIGhvdXNlIHRvby4nKVxyXG4gICAgICB9LFxyXG5cclxuICAgICAgJ3dhdGVyZmFsbCc6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmluZm8oJ1dhdGVyZmFsbCcpXHJcbiAgICAgICAgbG9jYXRpb25zTG9hZCgnd2F0ZXJmYWxsJylcclxuICAgICAgICBzZXRQb3NpdGlvbigkcGxheWVyLCA0NzUsIDM2NSlcclxuICAgICAgICBuZXdTb3VuZCgnd2F0ZXJmYWxsJylcclxuICAgICAgICBkaWFsb2d1ZUhpZGUoKVxyXG4gICAgICB9LFxyXG4gICAgICAnd2F0ZXJmYWxsL3RlbW1pZSc6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmluZm8oJ1RlbW1pZScpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJCgnLm1hcCcpLCAtMTQ1OTYsIC01NDg4KVxyXG4gICAgICAgIHNldFBvc2l0aW9uKCRwbGF5ZXIsIDc1MywgMzc1KVxyXG4gICAgICAgIG5ld1NvdW5kKCd0ZW1taWUnKVxyXG4gICAgICAgIGRpYWxvZ3VlKCd0ZW1taWUnLCAnVGVtbWllIFZpbGxhZ2UgaG9tZSB0byBtYW55IFRlbW1pZXMsIG5vdGFibGUgZm9yIHRoZWlyIHF1aXJraW5lc3MgYW5kIGFmZmVjdGVkIEVuZ2xpc2ggc3BlZWNoLiBbbmV3XScgK1xyXG4gICAgICAgICAgJ1tzcG9pbGVyXUhlbHAgdGhlIHNob3BrZWVwZXIgcGF5IGZvciBhIGNvbGxhZ2UgZWR1Y2F0aW9uLlsvc3BvaWxlcl0nKVxyXG4gICAgICB9LFxyXG5cclxuICAgICAgJ2hvdGxhbmQnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5pbmZvKCdIb3RsYW5kJylcclxuICAgICAgICBsb2NhdGlvbnNMb2FkKCdob3RsYW5kJylcclxuICAgICAgICBzZXRQb3NpdGlvbigkcGxheWVyLCAyNTgsIDQzMilcclxuICAgICAgICBuZXdTb3VuZCgnaG90bGFuZCcpXHJcbiAgICAgICAgZGlhbG9ndWUobnVsbCwgJ1dvdyBpcyBpdCBob3QgaW4gaGVyZT8gVGhlIGhvdGxhbmQgaXMgdGhlIHBhdGggdG8gdGhlIGNvcmVbbmV3XScgK1xyXG4gICAgICAgICAgJ01UVCBSZXNvcnQsIEFscGh5XFwncyBsYWIsIGFtb25nIG90aGVyIHRoaW5ncyBhcmUgbG9jYXRlZCBoZXJlLicpXHJcbiAgICAgIH0sXHJcbiAgICAgICdob3RsYW5kL2FscGh5JzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNldFBvc2l0aW9uKCRwbGF5ZXIsIDc2OCwgMzY5LjI0NilcclxuICAgICAgICBzZXRQb3NpdGlvbigkKCcubWFwJyksIC00NzU4Ljk3LCAtNjY1OC41NilcclxuICAgICAgICBuZXdTb3VuZCgnYWxwaHlzJylcclxuICAgICAgICBkaWFsb2d1ZSgnQWxwaHlzJywgXCJUaGUgTGFiIGlzIHRoZSB3b3JrcGxhY2UgYW5kIGhvbWUgb2YgdGhlIHJveWFsIHNjaWVudGlzdCwgQWxwaHlzLCBpbiBIb3RsYW5kLiBcIiArXHJcbiAgICAgICAgXCJJdCBpcyBhIHNpbmdsZSBidWlsZGluZyBvZiB0ZWNobm9sb2dpY2FsIHByb3dlc3Mgd2hlcmUgQWxwaHlzIGNvbmR1Y3RzIGhlciBzdHVkaWVzLlwiKVxyXG4gICAgICB9LFxyXG4gICAgICAndGhlLWNvcmUnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5pbmZvKCdUaGUgQ29yZScpXHJcbiAgICAgICAgbG9jYXRpb25zTG9hZCgndGhlLWNvcmUnKVxyXG4gICAgICAgIG5ld1NvdW5kKCd0aGUtY29yZScpXHJcbiAgICAgICAgZGlhbG9ndWUoXCJzYW5zXCIsIFwiTm90aGluZyB0byBzZWUgaGVyZS5cIilcclxuICAgICAgfSxcclxuICAgICAgJ25ldy1ob21lJzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnNvbGUuaW5mbygnTmV3IEhvbWUnKVxyXG4gICAgICAgIGxvY2F0aW9uc0xvYWQoJ25ldy1ob21lJylcclxuICAgICAgICBuZXdTb3VuZCgnaGlzLXRoZW1lJylcclxuICAgICAgICBzZXRQb3NpdGlvbigkcGxheWVyLCA3NjgsIDM2OS4yNDYpXHJcbiAgICAgICAgc2V0UG9zaXRpb24oJCgnLm1hcCcpLCAxMjYsIC0xOTgwKTtcclxuICAgICAgICBkaWFsb2d1ZShudWxsLCBcIk5ldyBIb21lIGlzIHRoZSBuZXcgY2FwaXRhbCBvZiB0aGUgVW5kZXJncm91bmQsIHJ1bGVkIGJ5IEFzZ29yZSBEcmVlbXVyciwgXCIgK1xyXG4gICAgICAgICAgXCJhbmQgdGhlIGZpbmFsIGxvY2F0aW9uIGluIHRoZSBnYW1lIGJlZm9yZSB0aGUgcHJvdGFnb25pc3QgcmVhY2hlcyB0aGUgYmFycmllci5cIilcclxuICAgICAgfVxyXG4gICAgfSkucmVzb2x2ZSgpXHJcbiAgXHJcbn1cclxuIl19
