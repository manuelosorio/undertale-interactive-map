"use strict";

var $audio = $('#audio'),
    $volumeIcon = $('#volumeIcon'),
    $player = $('.player'),
    $routerContainer = $('.router--container'),
    $menu = $('.nav--menu');
var $map = undefined;
$(document).ready(function () {
  routes();
  var $audio = $('#audio'),
      $muteButton = $('.icon'),
      $volumeIcon = $('#volumeIcon'); //alert variables

  var $alert = $('.alert'),
      $allow = $('#allow'),
      $decline = $('#decline');

  if (localStorage['soundAllowed'] !== undefined) {
    var isSoundAllowed = localStorage.getItem('soundAllowed');

    if (localStorage['soundAllowed'] === 'true') {
      $alert.remove();
      $audio.trigger('play');
      $audio.prop('volume', 0.25);
      $volumeIcon.attr('src', './images/sound.svg');
    } else {
      $alert.remove();
      $audio.trigger('pause');
      $audio.prop('volume', 0);
      $audio.prop('currentTime', '0');
      $volumeIcon.attr('src', './images/mute.svg');
    }
  } else {
    // $alert.remove()
    $audio.trigger('pause');
    $audio.prop('volume', 0);
    $audio.prop('currentTime', '0');
    $volumeIcon.attr('src', '');
  }

  $allow.click(function () {
    localStorage.setItem('soundAllowed', 'true');
    $alert.remove();
    $audio.trigger('play');
    $audio.prop('volume', 0.25);
    $volumeIcon.attr('src', './images/sound.svg');
  });
  $decline.click(function () {
    localStorage.setItem('soundAllowed', 'false');
    $volumeIcon.attr('src', './images/mute.svg');
    $alert.remove();
  });
  $volumeIcon.click(function () {
    if (localStorage['soundAllowed'] === 'true') {
      localStorage['soundAllowed'] = 'false';
      $volumeIcon.attr('src', './images/mute.svg');
      soundMute();
    } else if (localStorage['soundAllowed'] === 'false') {
      localStorage['soundAllowed'] = true;
      $volumeIcon.attr('src', './images/sound.svg');
      soundUnmute();
    }

    console.log('Is sound allowed', localStorage['soundAllowed']);
  });
  console.log('Is sound allowed: ', localStorage['soundAllowed']);
  $('.player').draggable({
    addClasses: false
  });
});

function locationsLoad(name) {
  console.warn(window.location.href.indexOf("404") > -1);

  if (!(window.location.href.indexOf('404') > -1)) {
    $.ajaxSetup({
      cache: false
    });
    $routerContainer.css({
      opacity: '0'
    });
    $player.css({
      opacity: '0'
    });
    $routerContainer.load('./locations/' + name + '.html', function () {
      $routerContainer.stop().animate({
        opacity: '1'
      }, 800, 'swing');
      $player.stop().delay(800).css({
        opacity: '1'
      });
      $('#navMenu').on('click', function () {
        var $this = $(this);
        $this.toggleClass('active');
      });
      $('.map').draggable({
        addClasses: false
      });
      $('.interest-point').draggable({
        addClasses: false
      });
    });
  } else {
    $.ajaxSetup({
      cache: false
    });
    $routerContainer.css({
      opacity: '0'
    });
    $player.css({
      opacity: '0'
    });
    $routerContainer.load('./locations/' + name + '.html', function () {
      $routerContainer.css({
        opacity: '1'
      });
      $player.stop().delay(0).css({
        opacity: '0'
      });
    });
  }
}

var $links = $('#links');

function createNav(navItems) {}

$links.click(function () {
  deleteNav();
});

function deleteNav() {// $links.empty()
}

function newSound(name) {
  console.log("New Song name:", name);
  var src = "./audio/music/" + name + ".mp3";
  console.log("path: ", src);
  $audio.trigger("pause");
  $audio.prop("currentTime", "0");
  $audio.attr('src', src);
  console.log("Local Storage ".concat(localStorage.getItem('soundAllowed')));

  if (localStorage.getItem('soundAllowed') !== undefined || localStorage.getItem('soundAllowed') !== "false") {
    $audio.trigger('play');
  } else if (localStorage.getItem('soundAllowed') === "false") {}
}

function soundMute() {
  $audio.prop("volume", 0);
}

function soundUnmute() {
  $audio.prop("volume", 0.25);
  $audio.prop("currentTime", 0);
  $audio.trigger('play');
}

$(document).keydown(function (e) {
  var speed = 17,
      movement = 15;
  $map = $('.map');

  if (!(window.location.href.indexOf("404") > -1)) {
    switch (e.which) {
      //move up
      case 38:
      case 87:
        console.log(e.code + ' up');
        updatePosition(null, -1 * movement, speed, 'easeOutQuart');
        break;
      //move down

      case 40:
      case 83:
        console.log(e.code + ' down');
        updatePosition(null, movement, speed, 'easeOutQuart');
        break;
      // move left

      case 37:
      case 65:
        console.log(e.code + ' left');
        updatePosition(-1 * movement, null, speed, 'easeOutQuart');
        break;
      //move right

      case 39:
      case 68:
        updatePosition(movement, null, speed, 'easeOutQuart');
        break;
    }
  }
});

function setPosition(target, x, y) {
  var $this = $(this);
  $this.target = target;
  $this.posX = x;
  $this.posY = y;

  if ($this.posX != null && $this.posY != null) {
    console.log("Position X", $this.posX);
    console.log("Position Y", $this.posY);
    $this.target.css({
      'left': $this.posX + 'px',
      'top': $this.posY + 'px'
    });
  } else {
    console.warn("There is actually a null X or Y... Hopefully its intentional...");

    if ($this.posX != null) {
      $this.$this.target.css({
        'left': $this.posX + 'px'
      });
    } else {
      console.warn("X is returning null");
    }

    if ($this.posY != null) {
      $this.target.css({
        'top': $this.posY + 'px'
      });
    } else {
      console.warn("Y is returning null");
    }
  }
}

function updatePosition(x, y, dt, easing) {
  var $this = $(this);
  $this.moveX = x;
  $this.moveY = y;
  $this.offsetX = 5;
  $this.offsetY = 5;
  $this.dt = dt; // X Movement

  if ($this.moveX != null) {
    if ($this.moveX < 0) {
      $this.moveX *= -1;

      if ($player.position().left > 1) {
        $player.stop().animate({
          left: '-=' + $this.moveX + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        left: '+=' + ($this.moveX - $this.offsetX) + 'px'
      }, dt, easing);
    } else {
      if ($player.position().left < window.innerWidth / 2) {
        $player.stop().animate({
          left: '+=' + $this.moveX + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        left: '-=' + ($this.moveX - $this.offsetX) + 'px'
      }, dt, easing);
    }
  } // Y Movement


  if ($this.moveY != null) {
    if ($this.moveY < 0) {
      $this.moveY *= -1;

      if ($player.position().top > 1) {
        $player.stop().animate({
          top: '-=' + $this.moveY + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        top: '+=' + ($this.moveY - $this.offsetY) + 'px'
      }, dt, easing);
    } else {
      if ($player.position().top < window.innerHeight / 2) {
        $player.stop().animate({
          top: '+=' + $this.moveY + 'px'
        }, dt, easing);
      }

      $map.stop().animate({
        top: '-=' + ($this.moveY - $this.offsetY) + 'px'
      }, dt, easing);
    }
  }
}

var root = null;
var useHash = true; // Defaults to: false

var hash = '#!'; // Defaults to: '#'

var router = new Navigo(root, useHash, hash);

function routes() {
  router.on(function () {
    console.info('The Underground');
    locationsLoad('the-underground');
    newSound('start');
    setPosition($player, 62, 311);
  });
  router.notFound(function (query) {
    console.info('404 page not found');
    locationsLoad('stay-determined');
    newSound('determination');
    router.navigate("/404");
    deleteNav();
    $(document).keydown(function (e) {
      if (window.location.href.indexOf("404") > -1) {
        setPosition($player, 62, 311);
        router.navigate("/");
      }
    });
  });
  router.on({
    'ruins': function ruins() {
      console.info('Ruins');
      locationsLoad('ruins');
      newSound('ruins');
      setPosition($player, 680, 377);
    },
    'ruins/spider-bake-sale': function ruinsSpiderBakeSale() {
      newSound('spiderdance');
      setPosition($player, 680, 377);
    },
    'snowdin': function snowdin() {
      console.info('Snowdin Forest');
      locationsLoad('snowdin');
      newSound('snowdin');
      setPosition($player, 264, 468);
    },
    'snowdin/snowman': function snowdinSnowman() {
      setPosition($('.map'), -5634, -794);
      setPosition($player, 764, 300);
    },
    'snowdin/grillbys': function snowdinGrillbys() {
      setPosition($('.map'), -21909, -2870);
      setPosition($player, 779, 345);
    },
    'snowdin/papyrus-sans-house': function snowdinPapyrusSansHouse() {
      setPosition($('.map'), -23827, -2885);
      setPosition($player, 779, 345);
    },
    'waterfall': function waterfall() {
      console.info('Waterfall');
      locationsLoad('waterfall');
      setPosition($player, 475, 365);
      newSound('waterfall');
    },
    'waterfall/temmie': function waterfallTemmie() {
      console.info('Temmie');
      setPosition($('.map'), -14596, -5488);
      setPosition($player, 753, 375);
      newSound('temmie');
    },
    'hotland': function hotland() {
      console.info('Hotland');
      locationsLoad('hotland');
      setPosition($player, 258, 432);
      newSound('hotland');
    },
    'hotland/alphy': function hotlandAlphy() {
      setPosition($player, 768, 369.246);
      setPosition($('.map'), -4758.97, -6658.56);
      newSound('alphys');
    },
    'the-core': function theCore() {
      console.info('The Core');
      locationsLoad('the-core');
      newSound('the-core');
    },
    'new-home': function newHome() {
      console.info('New Home');
      locationsLoad('new-home');
      newSound('his-theme');
    }
  }).resolve();
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
